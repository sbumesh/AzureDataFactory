{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "salesforce69"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"AmazonS32Dest_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS32Dest'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"Salesforce1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Salesforce1'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"Salesforce2_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'Salesforce2'"
		},
		"SalesforcetoTest_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'SalesforcetoTest'"
		},
		"linkSalesforce1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkSalesforce1'"
		},
		"linkSalesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'linkSalesforce1'"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIARSIREVGQEFR6PC4O"
		},
		"AmazonS32Dest_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIARSIREVGQEFR6PC4O"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "Umesh.Srinivasaiah@sita.aero"
		},
		"Salesforce1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "3MVG95jctIhbyCpo.M5oBPNmMoXIoJEdLTtD9y5UqEWqmzhWCzLySRVZ.SS0Kr12DoRR_3nfxftySKlT0sMnx"
		},
		"Salesforce2_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com"
		},
		"Salesforce2_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "3MVG95jctIhbyCpo.M5oBPNmMoXIoJEdLTtD9y5UqEWqmzhWCzLySRVZ.SS0Kr12DoRR_3nfxftySKlT0sMnx"
		},
		"SalesforcetoTest_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com/"
		},
		"SalesforcetoTest_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "R1wS6AAR7l2HGFIFbvpGV79YTKYyylgw"
		},
		"linkSalesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"linkSalesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "Umesh.Srinivasaiah@sita.aero"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/plReadAccessTokenfromFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "read json accessfile",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2017-11-09",
								"x-ms-blob-type": "BlockBlob"
							},
							"url": "https://salesforce69.blob.core.windows.net/contsalesforce/token.json",
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "read json accessfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "vAccessToken",
							"value": {
								"value": "@activity('read json accessfile').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.pSobjectList",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "sobject describe",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Accept": "application/json",
											"Authorization": {
												"value": "@concat('Bearer ' ,variables('vAccessToken')    )",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://d5w0000050tsiea2-dev-ed.my.salesforce.com/services/data/v48.0/sobjects/',item(),'/describe')",
											"type": "Expression"
										},
										"body": {
											"value": "@pipeline().parameters.body",
											"type": "Expression"
										}
									}
								},
								{
									"name": "write Sobject descrive json to Blob",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "sobject describe",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "PUT",
										"headers": {
											"x-ms-version": "2017-11-09",
											"x-ms-blob-type": "BlockBlob"
										},
										"url": {
											"value": "@replace('https://salesforce69.blob.core.windows.net/contsalesforce/token12.json' ,'token12' , item())",
											"type": "Expression"
										},
										"body": {
											"value": "@activity('sobject describe').output",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://storage.azure.com"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pWebFileName": {
						"type": "string",
						"defaultValue": "text"
					},
					"pSobjectList": {
						"type": "array",
						"defaultValue": [
							"Account",
							"Contact"
						]
					},
					"body": {
						"type": "string"
					}
				},
				"variables": {
					"vAccessToken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2024-01-25T01:53:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesforcegetTo0ken')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": {
								"value": "@pipeline().parameters.url",
								"type": "Expression"
							},
							"body": {
								"value": "@pipeline().parameters.body",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable entire Json string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "jsonString",
							"value": {
								"value": "@{activity('Web1').output}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set variable accesstoken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AccessToken",
							"value": {
								"value": "@activity('Web1').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "get lsit of Sobject",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "set variable accesstoken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Accept": "application/json",
								"Authorization": {
									"value": "@concat('Bearer ' , variables('AccessToken')    )",
									"type": "Expression"
								}
							},
							"url": {
								"value": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com/services/data/v48.0/sobjects",
								"type": "Expression"
							},
							"body": {
								"value": "@pipeline().parameters.body",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "set variable accesstoken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.sObjectList",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "sobject describe",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Accept": "application/json",
											"Authorization": {
												"value": "@concat('Bearer ' , variables('AccessToken')    )",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://d5w0000050tsiea2-dev-ed.my.salesforce.com/services/data/v48.0/sobjects/',item(),'/describe')",
											"type": "Expression"
										},
										"body": {
											"value": "@pipeline().parameters.body",
											"type": "Expression"
										}
									}
								},
								{
									"name": "write Key Json file to output_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "sobject describe",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "PUT",
										"headers": {
											"x-ms-version": "2017-11-09",
											"x-ms-blob-type": "BlockBlob"
										},
										"url": {
											"value": "@replace('https://salesforce69.blob.core.windows.net/contsalesforce/token.json', 'token.json',item())",
											"type": "Expression"
										},
										"body": {
											"value": "@activity('sobject describe').output",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://storage.azure.com"
										}
									}
								}
							]
						}
					},
					{
						"name": "write Key Json file to output",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2017-11-09",
								"x-ms-blob-type": "BlockBlob"
							},
							"url": {
								"value": "https://salesforce69.blob.core.windows.net/contsalesforce/token.json",
								"type": "Expression"
							},
							"body": {
								"value": "@activity('Web1').output",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com/services/oauth2/token"
					},
					"body": {
						"type": "string",
						"defaultValue": "grant_type=password&client_id=3MVG95jctIhbyCpo.M5oBPNmMoXIoJEdLTtD9y5UqEWqmzhWCzLySRVZ.SS0Kr12DoRR_3nfxftySKlT0sMnx&client_secret=05393E3026C411587F41159D41D8FD848842A3511555425DD7288DB3D91BB9D3&username=Umesh.Srinivasaiah@sita.aero&password=S@lesForce!9"
					},
					"pWebFileName": {
						"type": "string",
						"defaultValue": "token.json"
					},
					"sObjectList": {
						"type": "array",
						"defaultValue": [
							"Account",
							"Contact"
						]
					}
				},
				"variables": {
					"AccessToken": {
						"type": "String"
					},
					"jsonString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2024-01-25T01:42:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesforcegetjsonToFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": {
								"value": "@pipeline().parameters.url",
								"type": "Expression"
							},
							"body": {
								"value": "@pipeline().parameters.body",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "https://d5w0000050tsiea2-dev-ed.my.salesforce.com/services/oauth2/token"
					},
					"body": {
						"type": "string",
						"defaultValue": "grant_type=password&client_id=3MVG95jctIhbyCpo.M5oBPNmMoXIoJEdLTtD9y5UqEWqmzhWCzLySRVZ.SS0Kr12DoRR_3nfxftySKlT0sMnx&client_secret=05393E3026C411587F41159D41D8FD848842A3511555425DD7288DB3D91BB9D3&username=Umesh.Srinivasaiah@sita.aero&password=S@lesForce!9"
					}
				},
				"variables": {
					"AccessToken": {
						"type": "String"
					},
					"jsonString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2024-01-25T01:42:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS32Dest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('AmazonS32Dest_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS32Dest_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					},
					"apiVersion": "54.0",
					"clientId": "[parameters('Salesforce1_properties_typeProperties_clientId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SalesforceV2",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce2_properties_typeProperties_environmentUrl')]",
					"clientId": "[parameters('Salesforce2_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('Salesforce2_clientSecret')]"
					},
					"apiVersion": "54.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforcetoTest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SalesforceV2",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforcetoTest_properties_typeProperties_environmentUrl')]",
					"clientId": "[parameters('SalesforcetoTest_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('SalesforcetoTest_clientSecret')]"
					},
					"apiVersion": "54.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkSalesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('linkSalesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('linkSalesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkSalesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('linkSalesforce1_securityToken')]"
					},
					"apiVersion": "54.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonAws')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "etltalend"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pfile",
							"type": "Expression"
						},
						"folderPath": "fromAws/csv",
						"container": "container1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "etltalend"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAwsS3Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS32Dest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS32Dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsSalesforceSobject')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkSalesforce1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sObject": {
						"type": "string",
						"defaultValue": "Account"
					}
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().sObject",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkSalesforce1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Azure_blob_Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string",
						"defaultValue": "csv"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('fromAws/',dataset().path)",
							"type": "Expression"
						},
						"container": "container1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Azure_blob_Dest_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string",
						"defaultValue": "csv"
					},
					"pfilenmae": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pfilenmae",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('fromAws/',dataset().path)",
							"type": "Expression"
						},
						"container": "container1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/awsMoveFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsAwsS3Dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_Azure_blob_Dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.extType",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@variables('vFolder')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@variables('vFolder')",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "dsAwsS3Dest",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_Azure_blob_Dest",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFolder",
										"value": {
											"value": "@concat('*.',item())",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsAwsS3Dest",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AmazonS3ReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach3",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('arrayFileNames')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFolder",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "Csv"
					},
					"extType": {
						"type": "array",
						"defaultValue": [
							"csv",
							"json"
						]
					}
				},
				"variables": {
					"vFolder": {
						"type": "String"
					},
					"arrayFileNames": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-23T03:03:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsAwsS3Dest')]",
				"[concat(variables('factoryId'), '/datasets/ds_Azure_blob_Dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_Azure_blob_Dest",
								"type": "DatasetReference",
								"parameters": {
									"path": "csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Validation1",
									"type": "Validation",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_Azure_blob_Dest_copy1",
											"type": "DatasetReference",
											"parameters": {
												"path": "csv",
												"pfilenmae": {
													"value": "@variables('pFile')",
													"type": "Expression"
												}
											}
										},
										"timeout": "0.12:00:00",
										"sleep": 10
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pFile",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Validation1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "DelimitedText1",
											"type": "DatasetReference",
											"parameters": {
												"pfile": {
													"value": "@variables('pFile')",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://raw.githubusercontent.com/sbumesh/Umedataset/master/AMA_Flight%20Cheapest%20Date%20Search.json",
							"body": {
								"value": "@variables('pFile')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-blob-type": "BlockBlob"
							},
							"url": {
								"value": "@replace('https://salesforce69.blob.core.windows.net/contsalesforce/myjson.json?sp=racw&st=2024-01-23T15:53:36Z&se=2024-01-24T23:53:36Z&spr=https&sv=2022-11-02&sr=c&sig=J9L7Ir032%2Bp97rU38HD20Khg55lASvJUSM%2BUFbzokkQ%3D' ,'myjson.json' , pipeline().parameters.pWebFileName)",
								"type": "Expression"
							},
							"body": {
								"value": "@activity('Web1').output",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pWebFileName": {
						"type": "string",
						"defaultValue": "out.json"
					}
				},
				"variables": {
					"pFile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-24T11:48:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Azure_blob_Dest')]",
				"[concat(variables('factoryId'), '/datasets/ds_Azure_blob_Dest_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		}
	]
}